jobs:
  - job: Plan
    displayName: "Terraform Plan ${{ parameters.environment }}"
    # self hosted pool (a docker container in az vm)
    pool:
      name: terraform-agents 
   
    steps:
      - checkout: self
      # inistialization and backend env specific configs
      - task: TerraformTaskV4@4
        displayName: Terraform Init
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: environments/${{ parameters.environment }}
          backendServiceArm: 'connect-terraform-azure'
          backendAzureRmResourceGroupName: '$(BACKEND_RESOURCE_GROUP_NAME)'
          backendAzureRmStorageAccountName: '$(BACKEND_STORAGE_ACCOUNT_NAME)'
          backendAzureRmContainerName: '$(BACKEND_CONTAINER_NAME)'
          backendAzureRmKey: '$(BACKEND_KEY)'
      # validate the code 
      - script: |
          terraform validate
          echo "Validation completed"
        workingDirectory: environments/${{ parameters.environment }}
        displayName: 'Terraform Validate'
      # plan the changes
      - task: TerraformTaskV4@4
        displayName: 'Terraform Plan'
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: environments/${{ parameters.environment }}
          environmentServiceNameAzureRM: 'connect-terraform-azure'
          commandOptions: '-out=tfplan'
      
      # publish the plan file as a pipeline artifact
      - task: PublishPipelineArtifact@1
        displayName: 'Publish Terraform Plan Artifact'
        inputs:
          targetPath: 'environments/${{ parameters.environment }}/tfplan'
          artifactName: 'tfplan_${{ parameters.environment }}'
          publishLocation: 'pipeline'