parameters:
  - name: environment
    type: string

steps:
  - checkout: self

  - task: DownloadPipelineArtifact@2
    displayName: 'Download Terraform Plan'
    inputs:
      artifactName: 'tfplan_${{ parameters.environment }}'
      targetPath: 'environments/${{ parameters.environment }}'

  - task: TerraformTaskV4@4
    displayName: Terraform Init
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: environments/${{ parameters.environment }}
      backendServiceArm: 'connect-terraform-azure'
      backendAzureRmResourceGroupName: '$(BACKEND_RESOURCE_GROUP_NAME)'
      backendAzureRmStorageAccountName: '$(BACKEND_STORAGE_ACCOUNT_NAME)'
      backendAzureRmContainerName: '$(BACKEND_CONTAINER_NAME)'
      backendAzureRmKey: '$(BACKEND_KEY)'

  - task: TerraformTaskV4@4
    displayName: Terraform Apply
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: environments/${{ parameters.environment }}
      environmentServiceNameAzureRM: 'connect-terraform-azure'
      commandOptions: 'tfplan'
